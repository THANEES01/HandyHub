<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title %></title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.0/font/bootstrap-icons.css" rel="stylesheet">
    <link rel="stylesheet" href="/css/style.css">
    <!-- Load Stripe.js -->
    <script src="https://js.stripe.com/v3/"></script>
    <style>
        html, body {
            height: 100%;
            margin: 0;
            padding: 0;
            width: 100%;
            overflow-x: hidden;
        }
        
        body {
            display: flex;
            flex-direction: column;
            min-height: 100vh;
        }
        
        .content-wrapper {
            flex: 1 0 auto;
            width: 100%;
        }
        
        .footer-wrapper {
            flex-shrink: 0;
            width: 100vw;
            margin-top: auto;
            left: 0;
            right: 0;
            max-width: none;
            padding-left: 0;
            padding-right: 0;
        }
        
        .payment-container {
            max-width: 800px;
            margin: 0 auto;
        }
        
        .payment-header {
            background-color: var(--primary-blue);
            color: white;
            padding: 30px;
            border-radius: 15px 15px 0 0;
            margin-bottom: 0;
        }
        
        .payment-content {
            background-color: white;
            padding: 30px;
            border-radius: 0 0 15px 15px;
            box-shadow: 0 5px 20px rgba(0,0,0,0.1);
        }
        
        .back-link {
            color: var(--primary-blue);
            text-decoration: none;
            display: inline-flex;
            align-items: center;
            margin-bottom: 20px;
        }
        
        .back-link i {
            margin-right: 5px;
        }
        
        .back-link:hover {
            text-decoration: underline;
        }
        
        .booking-summary {
            background-color: #f8f9fa;
            border-radius: 10px;
            padding: 20px;
            margin-bottom: 30px;
        }
        
        .booking-summary h4 {
            color: var(--dark-blue);
            margin-bottom: 15px;
            padding-bottom: 10px;
            border-bottom: 1px solid #e9ecef;
        }
        
        .summary-item {
            display: flex;
            justify-content: space-between;
            margin-bottom: 10px;
        }
        
        .summary-item:last-child {
            margin-bottom: 0;
        }
        
        .summary-item.total {
            font-weight: bold;
            padding-top: 10px;
            border-top: 1px solid #e9ecef;
            font-size: 1.1rem;
        }
        
        .payment-form {
            background-color: #f8f9fa;
            padding: 20px;
            border-radius: 10px;
        }
        
        #payment-element {
            margin-bottom: 24px;
        }
        
        .btn-pay {
            background-color: var(--primary-blue);
            color: white;
            border: none;
            padding: 12px 25px;
            font-weight: 500;
            border-radius: 8px;
            width: 100%;
            transition: all 0.3s ease;
        }
        
        .btn-pay:hover:not(:disabled) {
            background-color: var(--dark-blue);
            transform: translateY(-2px);
            color: white;
        }
        
        .btn-pay:disabled {
            opacity: 0.5;
            cursor: default;
        }
        
        #payment-spinner {
            display: none;
            margin-left: 10px;
        }
        
        .payment-loading #payment-spinner {
            display: inline-block;
        }
        
        .payment-success-message {
            display: none;
            background-color: #d4edda;
            color: #155724;
            padding: 15px;
            border-radius: 8px;
            margin-bottom: 20px;
            text-align: center;
        }
        
        .payment-error-message {
            display: none;
            background-color: #f8d7da;
            color: #721c24;
            padding: 15px;
            border-radius: 8px;
            margin-bottom: 20px;
            text-align: center;
        }
        
        .payment-message {
            color: #666;
            font-size: 0.9rem;
            text-align: center;
            margin-top: 15px;
        }
    </style>
</head>
<body>
    <!-- Navbar -->
    <%- include('../partials/navbar') %>

    <div class="content-wrapper">
        <div class="container mt-5 mb-5">
            <a href="/customer/bookings" class="back-link">
                <i class="bi bi-arrow-left"></i> Back to Bookings
            </a>
            
            <div class="payment-container">
                <% if (locals.error) { %>
                    <div class="alert alert-danger" role="alert">
                        <%= error %>
                    </div>
                <% } %>
                
                <div class="payment-header">
                    <h2>Complete Payment</h2>
                    <p class="mb-0">Review your booking and complete payment</p>
                </div>
                
                <div class="payment-content">
                    <!-- Success and error messages -->
                    <div id="payment-success-message" class="payment-success-message">
                        <i class="bi bi-check-circle-fill me-2"></i>
                        Payment successful! Your booking has been confirmed.
                    </div>
                    
                    <div id="payment-error-message" class="payment-error-message">
                        <i class="bi bi-exclamation-circle-fill me-2"></i>
                        <span id="error-message-text">Payment processing failed. Please try again.</span>
                    </div>
                    
                    <div class="booking-summary">
                        <h4>Booking Summary</h4>
                        
                        <div class="summary-item">
                            <span>Service:</span>
                            <span><%= paymentInfo.serviceType %></span>
                        </div>
                        
                        <div class="summary-item">
                            <span>Base Fee:</span>
                            <span>RM <%= parseFloat(paymentInfo.baseFee).toFixed(2) %> (<%= paymentInfo.feeType %>)</span>
                        </div>
                        
                        <% 
                        // Calculate any additional fees
                        const serviceFee = parseFloat(paymentInfo.baseFee) * 0.05;
                        const totalAmount = parseFloat(paymentInfo.baseFee) + serviceFee;
                        %>
                        
                        <div class="summary-item">
                            <span>Service Fee (5%):</span>
                            <span>RM <%= serviceFee.toFixed(2) %></span>
                        </div>
                        
                        <div class="summary-item total">
                            <span>Total Amount:</span>
                            <span>RM <%= totalAmount.toFixed(2) %></span>
                        </div>
                    </div>
                    
                    <form id="payment-form" class="payment-form">
                        <input type="hidden" name="bookingId" value="<%= paymentInfo.bookingId %>">
                        
                        <h4 class="mb-3">Payment Method</h4>
                        <div id="payment-element">
                            <!-- Stripe Payment Element will be inserted here -->
                        </div>
                        
                        <button id="submit-button" class="btn btn-pay">
                            Pay RM <%= totalAmount.toFixed(2) %>
                            <span id="payment-spinner" class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>
                        </button>
                        
                        <p class="payment-message mt-3">
                            <i class="bi bi-shield-lock me-1"></i>
                            Your payment is secure and processed by Stripe. We do not store your payment information.
                        </p>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <div class="footer-wrapper">
        <!-- Footer -->
        <%- include('../partials/footer') %>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        // Initialize variables
        let stripe = null;
        let elements = null;
        let paymentElement = null;
        
        // Get the booking ID from the form
        const bookingId = document.querySelector('input[name="bookingId"]').value;
        
        // Display error message function
        function displayError(message) {
            // Reset loading state
            document.getElementById('submit-button').disabled = false;
            document.getElementById('submit-button').classList.remove('payment-loading');
            
            // Show error message
            const errorElement = document.getElementById('payment-error-message');
            document.getElementById('error-message-text').textContent = message;
            errorElement.style.display = 'block';
            
            // Scroll to the error message
            errorElement.scrollIntoView({ behavior: 'smooth', block: 'center' });
        }
        
        // Initialize Stripe and create payment intent
        async function initialize() {
            try {
                // 1. Initialize Stripe
                stripe = Stripe('<%= stripePublicKey %>');
                
                // 2. Create a payment intent on the server
                const response = await fetch('/customer/create-payment-intent', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        bookingId: bookingId
                    })
                });
                
                const data = await response.json();
                
                if (data.error) {
                    displayError(data.error);
                    return;
                }
                
                // 3. Initialize Elements with the PaymentIntent's client secret
                elements = stripe.elements({
                    clientSecret: data.clientSecret,
                    locale: 'en',
                    appearance: {
                        theme: 'stripe',
                        variables: {
                            colorPrimary: '#0077be',
                            colorBackground: '#ffffff',
                            colorText: '#32325d',
                            colorDanger: '#dc3545',
                            fontFamily: 'Arial, sans-serif'
                        }
                    }
                });
                
                // 4. Create and mount the Payment Element
                paymentElement = elements.create('payment', {
                    layout: {
                        type: 'tabs',
                        defaultCollapsed: false
                    }
                });
                
                paymentElement.mount('#payment-element');
                
                // 5. Enable the submit button once Elements is ready
                document.querySelector('#submit-button').disabled = false;
                
            } catch (error) {
                console.error('Initialization error:', error);
                displayError('Failed to initialize payment. Please try again later.');
            }
        }
        
        // Handle the form submission
        async function handleSubmit(e) {
            e.preventDefault();
            
            // Disable the submit button and show loading state
            const submitButton = document.getElementById('submit-button');
            submitButton.disabled = true;
            submitButton.classList.add('payment-loading');
            
            // Hide any existing messages
            document.getElementById('payment-success-message').style.display = 'none';
            document.getElementById('payment-error-message').style.display = 'none';
            
            try {
                // Confirm the payment with Stripe
                const { error } = await stripe.confirmPayment({
                    elements,
                    confirmParams: {
                        // Return URL where the customer should be redirected after payment
                        return_url: window.location.origin + '/customer/process-payment?bookingId=' + bookingId,
                    },
                    redirect: 'if_required' // Only redirect if needed (e.g., for 3DS)
                });
                
                if (error) {
                    // Payment failed
                    if (error.type === 'card_error' || error.type === 'validation_error') {
                        displayError(error.message);
                    } else {
                        displayError('An unexpected error occurred.');
                    }
                    
                    // Re-enable the submit button
                    submitButton.disabled = false;
                    submitButton.classList.remove('payment-loading');
                } else {
                    // Payment succeeded - will be handled by redirect or webhook
                    document.getElementById('payment-success-message').style.display = 'block';
                    
                    // Redirect to bookings page after a short delay
                    setTimeout(() => {
                        window.location.href = '/customer/bookings';
                    }, 2000);
                }
            } catch (error) {
                console.error('Payment error:', error);
                displayError('An unexpected error occurred. Please try again.');
                
                // Re-enable the submit button
                submitButton.disabled = false;
                submitButton.classList.remove('payment-loading');
            }
        }
        
        // Initialize when the document is loaded
        document.addEventListener('DOMContentLoaded', () => {
            initialize();
            
            // Set up the form submission handler
            document.getElementById('payment-form').addEventListener('submit', handleSubmit);
        });
    </script>
</body>
</html>