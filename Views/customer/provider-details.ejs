<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title %></title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.0/font/bootstrap-icons.css" rel="stylesheet">
    <link rel="stylesheet" href="/css/style.css">
    <style>
        .provider-profile {
            background-color: white;
            border-radius: 15px;
            box-shadow: 0 5px 20px rgba(0,0,0,0.1);
            overflow: hidden;
            margin-bottom: 30px;
        }
        
        .profile-header {
            background-color: var(--primary-blue);
            color: white;
            padding: 40px 30px;
            position: relative;
        }
        
        .profile-header h2 {
            font-size: 2.2rem;
            font-weight: 600;
            margin-bottom: 10px;
        }
        
        .verified-badge {
            background-color: #28a745;
            color: white;
            font-size: 0.8rem;
            padding: 5px 10px;
            border-radius: 20px;
            display: inline-flex;
            align-items: center;
            margin-bottom: 15px;
        }
        
        .verified-badge i {
            margin-right: 5px;
        }
        
        .profile-actions {
            position: absolute;
            top: 20px;
            right: 20px;
        }
        
        .profile-content {
            padding: 30px;
        }
        
        .profile-section {
            margin-bottom: 30px;
        }
        
        .profile-section h3 {
            color: var(--dark-blue);
            font-size: 1.5rem;
            margin-bottom: 20px;
            padding-bottom: 10px;
            border-bottom: 1px solid #eee;
        }
        
        .contact-info {
            background-color: var(--light-blue);
            border-radius: 10px;
            padding: 20px;
            margin-bottom: 30px;
        }
        
        .contact-item {
            display: flex;
            align-items: center;
            margin-bottom: 15px;
        }
        
        .contact-item:last-child {
            margin-bottom: 0;
        }
        
        .contact-item i {
            font-size: 1.2rem;
            color: var(--primary-blue);
            margin-right: 15px;
            width: 24px;
        }
        
        .category-tag, .service-tag {
            display: inline-block;
            padding: 8px 15px;
            border-radius: 20px;
            margin-right: 10px;
            margin-bottom: 10px;
            font-weight: 500;
        }
        
        .category-tag {
            background-color: var(--primary-blue);
            color: white;
        }
        
        .service-tag {
            background-color: var(--light-blue);
            color: var(--dark-blue);
        }
        
        .booking-section {
            background-color: #f9f9f9;
            border-radius: 15px;
            padding: 25px;
            box-shadow: 0 4px 15px rgba(0,0,0,0.05);
        }
        
        .btn-book-service {
            background-color: var(--primary-blue);
            color: white;
            border: none;
            padding: 12px 25px;
            font-weight: 500;
            border-radius: 8px;
            transition: all 0.3s ease;
        }
        
        .btn-book-service:hover {
            background-color: var(--dark-blue);
            transform: translateY(-2px);
            color: white;
        }
        
        .back-link {
            color: var(--primary-blue);
            text-decoration: none;
            display: inline-flex;
            align-items: center;
            margin-bottom: 20px;
        }
        
        .back-link i {
            margin-right: 5px;
        }
        
        .back-link:hover {
            text-decoration: underline;
        }
        
        .certification-section {
            margin-top: 20px;
        }
        
        .certification-badge {
            display: inline-flex;
            align-items: center;
            background-color: #f8f9fa;
            border: 1px solid #e9ecef;
            padding: 10px 15px;
            border-radius: 8px;
        }
        
        .certification-badge i {
            color: var(--primary-blue);
            margin-right: 10px;
            font-size: 1.2rem;
        }
        
        .provider-info {
            display: flex;
            align-items: center;
            margin-bottom: 15px;
        }
        
        .provider-info i {
            font-size: 1.2rem;
            color: var(--primary-blue);
            margin-right: 10px;
            width: 24px;
        }

        /* Updated styles for coverage area section */
        .coverage-card {
            border: 1px solid rgba(0, 0, 0, 0.1);
            border-radius: 12px;
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
            margin-bottom: 30px;
        }
        
        .coverage-tags {
            display: flex;
            flex-wrap: wrap;
            gap: 10px;
        }
        
        .location-pill {
            display: inline-flex;
            align-items: center;
            background-color: #e8f4f8;
            color: #0277bd;
            padding: 10px 18px;
            border-radius: 50px;
            font-size: 0.95rem;
            transition: all 0.2s ease;
            border: 1px solid rgba(2, 119, 189, 0.1);
        }
        
        .location-pill:hover {
            background-color: #d1e9f3;
            transform: translateY(-2px);
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
        }
        
        /* Message Provider Button Style */
        .btn-message {
            background-color: white;
            color: var(--primary-blue);
            border: 1px solid var(--primary-blue);
            transition: all 0.3s ease;
        }
        
        .btn-message:hover {
            background-color: #f0f7ff;
            color: var(--dark-blue);
        }

        .avatar-circle {
       width: 48px;
        height: 48px;
        border-radius: 50%;
        color: white;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 20px;
        font-weight: 500;
    }
    
    .rating-stars {
        font-size: 18px;
    }
    
    .review-text {
          color: #555;
        line-height: 1.5;
        overflow: hidden;
        display: -webkit-box;
        -webkit-line-clamp: 4;
        -webkit-box-orient: vertical;
    }
    
    .card {
        transition: transform 0.3s, box-shadow 0.3s;
        border-radius: 8px;
    }
    
    .card:hover {
        transform: translateY(-5px);
        box-shadow: 0 10px 20px rgba(0,0,0,0.1);
    }

    /* For message icon */
    .message-tooltip {
        position: absolute;
        right: 75px;
        bottom: 10px;
        background-color: rgba(0, 0, 0, 0.7);
        color: white;
        padding: 8px 15px;
        border-radius: 20px;
        font-size: 0.9rem;
        opacity: 0;
        transition: opacity 0.3s ease;
        white-space: nowrap;
        z-index: 1001;
    }

    .message-tooltip::after {
        content: '';
        position: absolute;
        right: -8px;
        bottom: 12px;
        border-width: 8px 0 8px 8px;
        border-style: solid;
        border-color: transparent transparent transparent rgba(0, 0, 0, 0.7);
    }

    #floating-chat-button {
        touch-action: none; /* Improves touch handling */
    }

    /* Pulse animation for the floating button */
    @keyframes pulse {
        0% {
            box-shadow: 0 0 0 0 rgba(0, 123, 255, 0.7);
        }
        70% {
            box-shadow: 0 0 0 10px rgba(0, 123, 255, 0);
        }
        100% {
            box-shadow: 0 0 0 0 rgba(0, 123, 255, 0);
        }
    }

    .pulse {
        animation: pulse 2s infinite;
    }

    /* Position the badge properly */
    .btn-primary .badge {
        position: absolute;
        top: 0;
        right: 0;
        transform: translate(25%, -25%);
    }

    /* Notification animation */
    @keyframes notify-bounce {
        0%, 20%, 50%, 80%, 100% {transform: translateY(0);}
        40% {transform: translateY(-5px);}
        60% {transform: translateY(-2px);}
    }

    .notify-animation {
        animation: notify-bounce 2s infinite;
    }
    </style>
</head>

<body>
    <!-- Navbar -->
    <%- include('../partials/navbar') %>

    <div class="container mt-5 mb-5">
        <a href="javascript:history.go(-1)" class="back-link">
            <i class="bi bi-arrow-left"></i> Back to Results
        </a>
        
        <% if (locals.error) { %>
            <div class="alert alert-danger" role="alert">
                <%= error %>
            </div>
        <% } %>
        
        <div class="provider-profile">
            <div class="profile-header">
                <% if (provider.is_verified) { %>
                    <div class="verified-badge">
                        <i class="bi bi-check-circle-fill"></i> Verified Provider
                    </div>
                <% } %>
                
                <h2><%= provider.business_name %></h2>
            </div>
            
            <div class="profile-content">
                <div class="row">
                    <div class="col-lg-8">
                        <div class="profile-section">
                            <h3>Contact Information</h3>
                            <div class="contact-info">
                                <div class="contact-item">
                                    <i class="bi bi-envelope"></i>
                                    <span><%= provider.email %></span>
                                </div>
                                
                                <div class="contact-item">
                                    <i class="bi bi-telephone"></i>
                                    <span><%= provider.phone_number %></span>
                                </div>
                            </div>
                            
                            <% if (provider.certification_url) { %>
                                <div class="certification-section">
                                    <div class="certification-badge">
                                        <i class="bi bi-award"></i>
                                        <span>Certified Professional</span>
                                    </div>
                                    <% if (provider.certification_url && provider.certification_url.startsWith('http')) { %>
                                        <a href="<%= provider.certification_url %>" target="_blank" class="btn btn-outline-primary btn-sm ms-2">
                                            View Certification
                                        </a>
                                    <% } %>
                                </div>
                            <% } %>
                        </div>
                        
                        <!-- Coverage Area Section -->
                        <div class="card coverage-card">
                            <div class="card-body p-4">
                                <h5 class="mb-3">
                                    <i class="bi bi-geo-alt me-2"></i>Coverage Areas
                                </h5>
                                
                                <% if (coverage && coverage.length > 0) { %>
                                    <div class="coverage-tags">
                                        <% coverage.forEach(area => { %>
                                            <span class="location-pill">
                                                <%= area.city_name %>, <%= area.state_name %>
                                            </span>
                                        <% }); %>
                                    </div>
                                <% } else { %>
                                    <p class="text-muted">No specific coverage areas listed for this provider.</p>
                                <% } %>
                            </div>
                        </div>
                        
                        <div class="profile-section">
                            <h3>Service Pricing</h3>
                            
                            <div id="category-info">
                                <!-- This will be populated by client-side JavaScript -->
                            </div>
                            
                            <div class="alert alert-info mt-3" role="alert">
                                <i class="bi bi-info-circle"></i> 
                                Additional charges may apply for parts and materials.
                            </div>
                        </div>
                        
                        <div class="profile-section">
                            <h3>Services Offered</h3>
                            <div>
                                <% if (services && services.length > 0) { %>
                                    <% services.forEach(service => { %>
                                        <span class="service-tag"><%= service.service_name %></span>
                                    <% }); %>
                                <% } else { %>
                                    <p class="text-muted">No specific services listed</p>
                                <% } %>
                            </div>
                        </div>
                    </div>
                    
                    <div class="col-lg-4">
                        <div class="booking-section" id="booking-section">
                            <h3>Book This Service Provider</h3>
                            <p>Contact this provider directly or request a service through our platform.</p>
                            
                            <% if (selectedCategory) { %>
                                <a href="/customer/book-service/<%= provider.id %>?category=<%= selectedCategory.category_name %>" class="btn btn-book-service w-100 mb-3">
                                    Book Now
                                </a>
                            <% } else { %>
                                <a href="/customer/book-service/<%= provider.id %>" class="btn btn-book-service w-100 mb-3">
                                    Book Now
                                </a>
                            <% } %>
                            
                           <a href="/customer/conversations?provider=<%= provider.id %>" class="btn btn-message w-100">
                                <i class="bi bi-chat-dots"></i> Message Provider
                            </a>
                        </div>
                    </div>
                </div>
                
         <!-- Reviews Section -->
<div class="container mt-5">
    <div class="row">
        <div class="col-12">
            <div class="profile-section">
                <h3 class="mb-4">Customer Reviews</h3>
                
                <!-- Rating Summary Section -->
                <div class="d-flex justify-content-between align-items-center mb-4">
                    <div class="d-flex align-items-center">
                        <div class="me-4">
                            <span class="display-4 fw-bold text-primary"><%= typeof averageRating !== 'undefined' ? averageRating : '0.0' %></span>
                            <div class="text-muted">Average Rating</div>
                        </div>
                        <div>
                            <div class="rating-stars">
                                <% const rating = typeof averageRating !== 'undefined' ? parseFloat(averageRating) : 0; %>
                                <% for(let i = 1; i <= 5; i++) { %>
                                    <% if (i <= Math.floor(rating)) { %>
                                        <i class="bi bi-star-fill text-warning fs-4"></i>
                                    <% } else if (i <= Math.floor(rating) + 0.5 && i > Math.floor(rating)) { %>
                                        <i class="bi bi-star-half text-warning fs-4"></i>
                                    <% } else { %>
                                        <i class="bi bi-star text-warning fs-4"></i>
                                    <% } %>
                                <% } %>
                            </div>
                            <small class="text-muted">Based on <%= typeof reviewCount !== 'undefined' ? reviewCount : 0 %> reviews</small>
                        </div>
                    </div>
                    
                    <a href="/customer/find-eligible-booking/<%= provider.id %>" class="btn btn-primary">
                        <i class="bi bi-pencil-fill me-1"></i> Write a Review
                    </a>
                </div>
                
                <hr class="my-4">
                
                <!-- Display reviews in a grid layout -->
                <% if (typeof reviews !== 'undefined' && reviews && reviews.length > 0) { %>
                    <div class="row">
                        <% reviews.forEach(review => { %>
                            <div class="col-md-6 mb-4">
                                <div class="card h-100 shadow-sm">
                                    <div class="card-body">
                                        <!-- Review Header with User Avatar and Info -->
                                        <div class="d-flex align-items-center mb-3">
                                            <div class="avatar-circle bg-primary me-3">
                                                <%= (review.first_name ? review.first_name.charAt(0) : 'A').toUpperCase() %>
                                            </div>
                                            <div>
                                                <h5 class="mb-0">
                                                    <%= review.first_name || 'Anonymous' %> 
                                                    <%= review.last_name ? review.last_name.charAt(0) + '.' : '' %>
                                                </h5>
                                                <div class="text-muted small">
                                                    <%= review.created_at ? new Date(review.created_at).toLocaleDateString('en-US', {
                                                        year: 'numeric', 
                                                        month: 'short', 
                                                        day: 'numeric'
                                                    }) : 'Unknown date' %>
                                                </div>
                                            </div>
                                        </div>
                                        
                                        <!-- Star Rating -->
                                        <div class="rating-stars mb-3">
                                            <% for(let i = 1; i <= 5; i++) { %>
                                                <% if (i <= (review.rating || 0)) { %>
                                                    <i class="bi bi-star-fill text-warning"></i>
                                                <% } else { %>
                                                    <i class="bi bi-star text-warning"></i>
                                                <% } %>
                                            <% } %>
                                        </div>
                                        
                                        <!-- Review Text -->
                                        <p class="mb-0 review-text"><%= review.review_text || 'No comment provided' %></p>
                                    </div>
                                </div>
                            </div>
                        <% }); %>
                    </div>
                    
                    <!-- View All Reviews Button -->
                    <% if (reviewCount > 2) { %>
                        <div class="text-center mt-3">
                            <a href="/customer/provider-reviews/<%= provider.id %>" class="btn btn-outline-primary">
                                View All Reviews
                            </a>
                        </div>
                    <% } %>
                <% } else { %>
                    <div class="alert alert-info">
                        <i class="bi bi-info-circle me-2"></i>
                        No reviews yet for this service provider.
                    </div>
                <% } %>
            </div>
        </div>
    </div>
</div>
            </div><!-- Close profile-content -->
        </div><!-- Close provider-profile -->
    </div><!-- Close container -->

    <!-- Floating Chat Button -->
    <div id="floating-chat-button" class="position-fixed bottom-0 end-0 mb-4 me-4" style="z-index: 1000; cursor: move;">
        <div class="message-tooltip" id="message-tooltip">View messages</div>
        <a href="/customer/conversations" class="btn btn-primary rounded-circle p-3 shadow-lg pulse d-flex align-items-center justify-content-center" style="width: 60px; height: 60px; transition: all 0.3s ease;">            <i class="bi bi-chat-dots-fill" style="font-size: 1.5rem;"></i>
        </a>
    </div>

    <div id="contact">
        <!-- Footer  -->
        <%- include('../partials/footer') %>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        // Set minimum date for booking to today
        document.addEventListener('DOMContentLoaded', function() {
            if (document.getElementById('bookingDate')) {
                const today = new Date().toISOString().split('T')[0];
                document.getElementById('bookingDate').min = today;
            }

            // Load the categories from the server-side data
            const categories = <%- JSON.stringify(categories || []) %>;
            const selectedCategory = <%- JSON.stringify(selectedCategory || null) %>;

            if (selectedCategory) {
                const categoryInfo = `
                    <div class="provider-info">
                        <i class="bi bi-cash-coin"></i>
                        <span>
                            <strong>Base Fee:</strong> RM ${parseFloat(selectedCategory.base_fee).toFixed(2).replace(/\.00$/, '')}
                            <span class="badge bg-info text-dark">${selectedCategory.fee_type}</span>
                        </span>
                    </div>
                `;
                document.getElementById('category-info').innerHTML = categoryInfo;
            } else if (categories && categories.length > 0) {
                const categoryInfo = `
                    <div class="provider-info">
                        <i class="bi bi-cash-coin"></i>
                        <span>
                            <strong>Base Fee:</strong> RM ${parseFloat(categories[0].base_fee).toFixed(2).replace(/\.00$/, '')}
                            <span class="badge bg-info text-dark">${categories[0].fee_type}</span>
                        </span>
                    </div>
                `;
                document.getElementById('category-info').innerHTML = categoryInfo;
            } else {
                document.getElementById('category-info').innerHTML = `
                    <div class="provider-info">
                        <i class="bi bi-cash-coin"></i>
                        <span>
                            <strong>Base Fee:</strong> Not available
                        </span>
                    </div>
                `;
            }
        });

        //for message icon
      document.addEventListener('DOMContentLoaded', function() {
        const floatingButton = document.getElementById('floating-chat-button');
        const tooltip = document.getElementById('message-tooltip');
        let isDragging = false;
        let offsetX, offsetY;
        let isTouchDevice = 'ontouchstart' in window || navigator.maxTouchPoints > 0;

        // Initialize button position from localStorage if available
        const savedPosition = localStorage.getItem('chatButtonPosition');
        if (savedPosition) {
            try {
                const position = JSON.parse(savedPosition);
                floatingButton.style.bottom = position.bottom + 'px';
                floatingButton.style.right = position.right + 'px';
            } catch (e) {
                console.error('Error parsing saved position:', e);
            }
        }

        // Show tooltip briefly on page load
        setTimeout(() => {
            tooltip.style.opacity = '1';
            setTimeout(() => {
                tooltip.style.opacity = '0';
            }, 3000);
        }, 1000);

        // Mouse/Touch event handlers
        if (isTouchDevice) {
            // Touch events for mobile
            floatingButton.addEventListener('touchstart', handleDragStart);
            document.addEventListener('touchmove', handleDragMove);
            document.addEventListener('touchend', handleDragEnd);
        } else {
            // Mouse events for desktop
            floatingButton.addEventListener('mousedown', handleDragStart);
            document.addEventListener('mousemove', handleDragMove);
            document.addEventListener('mouseup', handleDragEnd);
        }

        // Start dragging function
        function handleDragStart(e) {
            // For touch events, use the first touch point
            const event = (e.type === 'touchstart') ? e.touches[0] : e;
            
            // Don't start drag if clicking on the link or icon
            const target = event.target.tagName.toLowerCase();
            if (target === 'a' || target === 'i') {
                return;
            }
            
            isDragging = true;
            
            // Calculate the offset
            const rect = floatingButton.getBoundingClientRect();
            offsetX = event.clientX - rect.left;
            offsetY = event.clientY - rect.top;
            
            // Change appearance to indicate dragging
            floatingButton.style.opacity = '0.8';
            
            // Prevent default to avoid scrolling on mobile
            e.preventDefault();
        }

        // Dragging function
        function handleDragMove(e) {
            if (!isDragging) return;
            
            // For touch events, use the first touch point
            const event = (e.type === 'touchmove') ? e.touches[0] : e;
            
            // Calculate new position
            const windowWidth = window.innerWidth;
            const windowHeight = window.innerHeight;
            const buttonWidth = floatingButton.offsetWidth;
            const buttonHeight = floatingButton.offsetHeight;
            
            const left = event.clientX - offsetX;
            const top = event.clientY - offsetY;
            
            // Keep button within viewport
            const right = Math.max(0, windowWidth - (left + buttonWidth));
            const bottom = Math.max(0, windowHeight - (top + buttonHeight));
            
            // Update position
            floatingButton.style.right = right + 'px';
            floatingButton.style.bottom = bottom + 'px';
            floatingButton.style.left = 'auto';
            floatingButton.style.top = 'auto';
            
            e.preventDefault(); // Prevent scrolling on mobile
        }

        // End dragging function
        function handleDragEnd() {
            if (isDragging) {
                isDragging = false;
                
                // Restore appearance
                floatingButton.style.opacity = '1';
                
                // Save position
                try {
                    const position = {
                        right: parseFloat(floatingButton.style.right) || 0,
                        bottom: parseFloat(floatingButton.style.bottom) || 0
                    };
                    localStorage.setItem('chatButtonPosition', JSON.stringify(position));
                } catch (e) {
                    console.error('Error saving position:', e);
                }
            }
        }

        // Show tooltip on hover/touch
        const showTooltip = () => {
            if (!isDragging) {
                tooltip.style.opacity = '1';
            }
        };
        
        const hideTooltip = () => {
            tooltip.style.opacity = '0';
        };

        // Add hover/touch events for tooltip
        if (isTouchDevice) {
            floatingButton.addEventListener('touchstart', function(e) {
                // Only show tooltip for brief touches on the button (not dragging)
                const touchDuration = 500; // ms
                const timer = setTimeout(showTooltip, touchDuration);
                
                floatingButton.addEventListener('touchend', function() {
                    clearTimeout(timer);
                    setTimeout(hideTooltip, 1500);
                }, { once: true });
                
                floatingButton.addEventListener('touchmove', function() {
                    clearTimeout(timer);
                    hideTooltip();
                }, { once: true });
            });
        } else {
            floatingButton.addEventListener('mouseenter', showTooltip);
            floatingButton.addEventListener('mouseleave', hideTooltip);
        }

        // Stop pulsing animation after 5 seconds
        setTimeout(() => {
            const button = floatingButton.querySelector('a');
            button.classList.remove('pulse');
        }, 5000);

        // Add unread message indicator
        function checkUnreadMessages() {
            fetch('/api/unread-count')
                .then(response => response.json())
                .then(data => {
                    if (data.success && data.unreadCount > 0) {
                        // If there are unread messages, add a badge
                        let badge = document.getElementById('unread-badge');
                        if (!badge) {
                            badge = document.createElement('span');
                            badge.id = 'unread-badge';
                            badge.className = 'position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger';
                            badge.style.fontSize = '0.7rem';
                            floatingButton.querySelector('a').appendChild(badge);
                        }
                        badge.textContent = data.unreadCount;
                    }
                })
                .catch(error => {
                    console.error('Error checking unread messages:', error);
                });
        }

        // Check for unread messages every 30 seconds
        setInterval(checkUnreadMessages, 30000);
        
        // Initial check
        checkUnreadMessages();
    });
    </script>

</body>
</html>